global
    nbproc  1
    maxconn 65536

defaults
    timeout connect 5s
    timeout queue   5s
    timeout server  30s
#    timeout tunnel  1h


# Secure front-end into which all http, websockets, and flash socket
# traffic enters.
frontend www
    bind            0.0.0.0:80
    timeout client  1h
    default_backend www_backend

    # Websocket? Let's check the http header.
    acl             is_websocket hdr(Upgrade) -i WebSocket
    use_backend     websocket_backend if is_websocket

    # Flash sockets? Let's inspect the data, if it's not http then
    # it's flash.
    tcp-request inspect-delay  500ms
    tcp-request content        accept if HTTP
    use_backend flashsocket_backend if !HTTP


frontend www_ipv6
    bind 2001:1608:12:1::affe:101:80

    timeout client  1h
    default_backend www_backend

    # Websocket? Let's check the http header.
    acl             is_websocket hdr(Upgrade) -i WebSocket
    use_backend     websocket_backend if is_websocket

    # Flash sockets? Let's inspect the data, if it's not http then
    # it's flash.
    tcp-request inspect-delay  500ms
    tcp-request content        accept if HTTP
    use_backend flashsocket_backend if !HTTP


# All non-socket traffic.
backend www_backend
    mode         http

    # Make haproxy available at https://example.com/haproxy
    stats enable
    stats uri    /haproxy

    option forwardfor

    # Web frameworks (express, rails, sinatra, etc) will use this
    # when absolute urls are generated.
    reqadd       x-forwarded-proto:\ http

    server server1 127.0.0.1:8080 weight 1 maxconn 8192 check

# All websockets traffic.
backend websocket_backend
    mode              http
    option forwardfor
    option http-server-close
    option forceclose
    no option httpclose

    server server1 127.0.0.1:8080 weight 1 maxconn 8192 check

# All flashsockets traffic.
backend flashsocket_backend
    server server1 127.0.0.1:8080 weight 1 maxconn 8192 check

